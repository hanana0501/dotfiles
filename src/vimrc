scriptencoding utf-8

filetype plugin indent off

augroup vimrc
    autocmd!
augroup END

if has('nvim')
    if has('win32')
        let g:vimproc#download_windows_dll = 1
        let g:python3_host_prog='C:/Users/hanazawa/AppData/Local/Programs/Python/Python35/python.exe'
        let g:python_host_prog='C:/Python27/python.exe'
    endif
endif

" -------------------------------
" vim-plug
" -------------------------------

if has('vim_starting') && !glob('~/.dotfiles/src/vim/autoload/plug.vim')
    call system('curl -fLo ~/.dotfiles/src/vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim')
endif

call plug#begin('~/.dotfiles/src/vim/plugged')

Plug 'junegunn/vim-plug', {'dir': '~/.dotfiles/src/vim/plugged/vim-plug/autoload'}

" must
Plug 'Shougo/vimproc.vim', {'dir': '~/.dotfiles/src/vim/plugged/vimproc.vim', 'do': 'make'}
Plug 'tpope/vim-dispatch'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'tpope/vim-fugitive'
Plug 'thinca/vim-qfreplace'
Plug 'itchyny/lightline.vim'
Plug 'tyru/caw.vim'
Plug 'christoomey/vim-tmux-navigator'
Plug 'w0rp/ale'
Plug 'scrooloose/nerdtree'
Plug 'ryanoasis/vim-devicons'
Plug 'sheerun/vim-polyglot'
Plug 'osyo-manga/vim-anzu'
Plug 'cohama/vim-insert-linenr'
Plug 'koron/codic-vim'
Plug 'lambdalisue/gina.vim'
Plug 'glidenote/memolist.vim'
Plug 'terryma/vim-multiple-cursors'
Plug 'tpope/vim-surround'
Plug 'thinca/vim-quickrun'

" scheme
Plug 'nanotech/jellybeans.vim'

" my plugin
Plug 'hananana/lilycomment.vim', {'for': ['cs'] }

" completion
Plug 'Shougo/neocomplete.vim'
Plug 'OmniSharp/omnisharp-vim'
Plug 'Rip-Rip/clang_complete'

Plug 'osyo-manga/vim-monster', {'for': ['ruby'] }
Plug 'fatih/vim-go', {'for': ['go']}
Plug 'artur-shaik/vim-javacomplete2', {'for': ['java']}

" syntax
Plug 'OrangeT/vim-csharp', { 'for':  [ 'cs', 'csi', 'csx' ]  }
Plug 'octol/vim-cpp-enhanced-highlight', { 'for': ['cpp'] }
Plug 'b4winckler/vim-objc', { 'for': ['objc'] }
Plug 'keith/swift.vim', { 'for': ['swift'] }
Plug 'vim-scripts/ShaderHighLight'
Plug 'aklt/plantuml-syntax', { 'for': ['uml'] }

" other
Plug 'vim-scripts/DoxygenToolkit.vim', { 'for' : ['cpp', 'objcpp', 'objc'] } 
Plug 'kana/vim-altr', {'for' : ['cpp', 'objcpp', 'objc'] }
Plug 'elzr/vim-json', {'for' : ['json']}
Plug 'stephpy/vim-yaml', { 'for' : [ 'yaml' ] }
Plug 'chrisbra/csv.vim', { 'for' : [ 'csv' ] }
Plug 'vim-scripts/Align', { 'for' : [ 'csv' ] }
Plug 'soramugi/auto-ctags.vim'
Plug 'iamcco/markdown-preview.vim', { 'for' : [ 'markdown' ] }

if has('mac')
    Plug 'nixprime/cpsm'
endif

call plug#end()
filetype plugin indent on

set runtimepath+=~/.dotfiles/src/vim/
runtime! misc/*.vim

" -------------------------------
" scheme
" -------------------------------
syntax enable
colorscheme jellybeans
set background=dark

" --------------------------------
" vim-json
" --------------------------------
let g:vim_json_syntax_conceal = 0

" --------------------------------
" markdown
" --------------------------------
let g:previm_open_cmd = 'open -a Google\ Chrome'
autocmd vimrc BufNewFile,BufRead *.{md,mdwn,mkd,mkdn,mark*} set filetype=markdown
let g:mkdp_path_to_chrome = "/Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome"

" --------------------------------
" plantuml
" --------------------------------
let g:plantuml_excutable_script='~/.dotfiles/scripts/make_uml'

" --------------------------------
" csv.vim
" --------------------------------
let g:csv_delim=','

" --------------------------------
" memolist.vim
" --------------------------------
if has('unix')
    let g:memolist_path = '/media/sf_vmshare/Dropbox/memolist'
else
    let g:memolist_path = '$HOME/Dropbox/memolist'
endif
let g:memolist_memo_suffix = 'md'

" --------------------------------
" vim-multiple-cursors
" --------------------------------
let g:multi_cursor_use_default_mapping=1

" --------------------------------
" grep
" :grep hoge | cw
" --------------------------------
if executable('rg')
    set grepprg=rg\ --vimgrep\ --no-heading\ --smart-case
    set grepformat=%f:%l:%c:%m,%f:%l:%m
endif

autocmd vimrc QuickFixCmdPost make,grepadd,grep,vimgrep if len(getqflist()) != 0 | copen | endif
